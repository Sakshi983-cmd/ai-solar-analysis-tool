# -*- coding: utf-8 -*-
"""AI SOLAR ANALYSIS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AMMWch0pA8Rkewt48FpGJ7D2I2N8iiIz
"""

!pip install transformers torch pillow matplotlib opencv-python --quiet

from google.colab import files
from PIL import Image
import io

uploaded = files.upload()
img_path = next(iter(uploaded))
img = Image.open(img_path).convert("RGB")
img.show()

import numpy as np
import cv2
import matplotlib.pyplot as plt

cv_img = cv2.cvtColor(np.array(img), cv2.COLOR_RGB2BGR)
gray = cv2.cvtColor(cv_img, cv2.COLOR_BGR2GRAY)
edges = cv2.Canny(gray, 50, 150)

# Rooftop pixel area estimation
rooftop_area_pixels = np.sum(edges > 0)
img_area = img.width * img.height
usable_ratio = rooftop_area_pixels / img_area
solar_score = round(usable_ratio * 10, 1)

# Show images
plt.figure(figsize=(12,4))
plt.subplot(1,3,1)
plt.imshow(img)
plt.title("Original")
plt.axis('off')

plt.subplot(1,3,2)
plt.imshow(gray, cmap='gray')
plt.title("Grayscale")
plt.axis('off')

plt.subplot(1,3,3)
plt.imshow(edges, cmap='gray')
plt.title("Edge Detection")
plt.axis('off')
plt.show()

from transformers import pipeline

# Load GPT-Neo (no API key)
generator = pipeline("text-generation", model="EleutherAI/gpt-neo-125M")

prompt = f"""
You are a solar rooftop analysis expert.

Image info:
- Dimensions: {img.width} x {img.height} pixels
- Estimated Rooftop Area (pixels): {rooftop_area_pixels}
- Solar Potential Score (0â€“10): {solar_score}

Generate a report including:
1. Usable panel installation area
2. Installation suggestion (panel count)
3. Monthly savings estimate
4. Payback period (years)
5. Total savings over 25 years
6. Assumptions (standard panel size, sunlight hours)

Respond in a clear format.
"""

result = generator(prompt, max_length=400, do_sample=True, temperature=0.7)[0]['generated_text']

print("ðŸ“‹ Solar Potential Assessment Report:\n")
print(result.split(prompt)[-1].strip())