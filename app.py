import streamlit as st
from PIL import Image
import numpy as np
import cv2
from transformers import pipeline

# Streamlit page config
st.set_page_config(page_title="Solar Rooftop AI Report", layout="centered")
st.title("☀️ AI Solar Rooftop Analysis")
st.write("Upload an image to get a solar feasibility report generated by AI.")

# Load lightweight LLM pipeline
@st.cache_resource
def load_pipeline():
    return pipeline("text-generation", model="gpt2")

generator = load_pipeline()

# Image upload
uploaded_file = st.file_uploader("Upload Rooftop Image", type=["jpg", "jpeg", "png"])

if uploaded_file:
    img = Image.open(uploaded_file).convert("RGB")
    resized_img = img.resize((400, 400))
    st.image(resized_img, caption="Uploaded Image", use_column_width=True)

    # Edge detection for basic area estimation
    img_np = np.array(resized_img)
    gray = cv2.cvtColor(img_np, cv2.COLOR_RGB2GRAY)
    edges = cv2.Canny(gray, 50, 150)
    rooftop_coverage = np.sum(edges > 0) / (400 * 400) * 100

    st.write(f"📐 Rooftop Edge Coverage: **{rooftop_coverage:.2f}%**")

    # Prompt for LLM
    prompt = (
        f"A rooftop image shows {rooftop_coverage:.2f}% edge coverage. "
        f"Estimate solar panel capacity, annual energy production, cost, and ROI."
    )

    st.write("🧠 Generating AI Report...")
    output = generator(prompt, max_new_tokens=150, do_sample=True, temperature=0.7)[0]['generated_text']

    st.subheader("📋 AI-Powered Report")
    st.write(output)
